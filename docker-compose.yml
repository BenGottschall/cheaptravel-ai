version: '3'

services: 

  back-end:
    build: 
      context: backend
    container_name: back-end
    working_dir: /usr/src/app
    networks: 
      - node-network
    volumes: 
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    tty: true
    ports: 
      - "8080:8080"
    command: npm run start
    depends_on:
      - db

  front-end:
    build: 
      context: frontend
    container_name: front-end
    working_dir: /usr/src/app
    networks: 
      - node-network
    volumes: 
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    tty: true
    ports: 
      - "4200:4200"
    command: npm run dev

  db:
    image: postgres:17
    container_name: db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5433:5432"
    networks:
      - node-network
    volumes:
      - postgres_data:/var/lib/postgresql/data

  nginx:
    build: 
      context: nginx
    container_name: nginx
    restart: always
    tty: true
    ports: 
      - "8000:80"
    networks: 
      - node-network
    depends_on:
      - back-end
      - front-end
  
networks: 
  node-network:
    driver: bridge

volumes:
  postgres_data: